{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdiwahab\\\\Desktop\\\\Project management\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]); // State to store projects\n  const [loading, setLoading] = useState(false); // State to track loading\n  const [error, setError] = useState(null); // State to handle errors\n\n  // Fetch projects from the backend\n  const fetchProjects = async () => {\n    try {\n      setLoading(true); // Show loading\n      const {\n        data\n      } = await axios.get('http://localhost:4000/api/projects');\n      setProjects(data);\n    } catch (err) {\n      console.error('Error fetching projects:', err.message);\n      setError('Failed to fetch projects. Please try again later.');\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  useEffect(() => {\n    fetchProjects(); // Fetch projects on initial render\n  }, []);\n\n  // Handle project creation\n  const handleCreate = async project => {\n    try {\n      await axios.post('http://localhost:4000/api/projects', project);\n      fetchProjects(); // Refresh the project list after creating\n    } catch (err) {\n      console.error('Error creating project:', err.message);\n      alert('Failed to create project. Please try again.');\n    }\n  };\n\n  // Handle project updates\n  const handleUpdate = async (id, project) => {\n    try {\n      await axios.put(`http://localhost:4000/api/projects/${id}`, project);\n      fetchProjects(); // Refresh the project list after updating\n    } catch (err) {\n      console.error('Error updating project:', err.message);\n      alert('Failed to update project. Please try again.');\n    }\n  };\n\n  // Handle project deletion\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:4000/api/projects/${id}`);\n      fetchProjects(); // Refresh the project list after deletion\n    } catch (err) {\n      console.error('Error deleting project:', err.message);\n      alert('Failed to delete project. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#4caf50'\n      },\n      children: \"Project Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectForm, {\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: projects,\n        onUpdate: handleUpdate,\n        onDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA9l46V8/XDi4K2nb5ZKNKZHKi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectForm","ProjectList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","projects","setProjects","loading","setLoading","error","setError","fetchProjects","data","get","err","console","message","handleCreate","project","post","alert","handleUpdate","id","put","handleDelete","delete","className","style","padding","fontFamily","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Abdiwahab/Desktop/Project management/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectForm from './components/ProjectForm';\r\nimport ProjectList from './components/ProjectList';\r\n\r\nfunction App() {\r\n  const [projects, setProjects] = useState([]); // State to store projects\r\n  const [loading, setLoading] = useState(false); // State to track loading\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  // Fetch projects from the backend\r\n  const fetchProjects = async () => {\r\n    try {\r\n      setLoading(true); // Show loading\r\n      const { data } = await axios.get('http://localhost:4000/api/projects');\r\n      setProjects(data);\r\n    } catch (err) {\r\n      console.error('Error fetching projects:', err.message);\r\n      setError('Failed to fetch projects. Please try again later.');\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects(); // Fetch projects on initial render\r\n  }, []);\r\n\r\n  // Handle project creation\r\n  const handleCreate = async (project) => {\r\n    try {\r\n      await axios.post('http://localhost:4000/api/projects', project);\r\n      fetchProjects(); // Refresh the project list after creating\r\n    } catch (err) {\r\n      console.error('Error creating project:', err.message);\r\n      alert('Failed to create project. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle project updates\r\n  const handleUpdate = async (id, project) => {\r\n    try {\r\n      await axios.put(`http://localhost:4000/api/projects/${id}`, project);\r\n      fetchProjects(); // Refresh the project list after updating\r\n    } catch (err) {\r\n      console.error('Error updating project:', err.message);\r\n      alert('Failed to update project. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle project deletion\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/api/projects/${id}`);\r\n      fetchProjects(); // Refresh the project list after deletion\r\n    } catch (err) {\r\n      console.error('Error deleting project:', err.message);\r\n      alert('Failed to delete project. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1 style={{ textAlign: 'center', color: '#4caf50' }}>Project Manager</h1>\r\n\r\n      {/* Show error if exists */}\r\n      {error && (\r\n        <p style={{ color: 'red', textAlign: 'center' }}>\r\n          {error}\r\n        </p>\r\n      )}\r\n\r\n      {/* Show loading spinner if loading */}\r\n      {loading ? (\r\n        <p style={{ textAlign: 'center' }}>Loading...</p>\r\n      ) : (\r\n        <>\r\n          {/* Project Form */}\r\n          <ProjectForm onCreate={handleCreate} />\r\n\r\n          {/* Project List */}\r\n          <ProjectList\r\n            projects={projects}\r\n            onUpdate={handleUpdate}\r\n            onDelete={handleDelete}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,MAAM;QAAEI;MAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,oCAAoC,CAAC;MACtEP,WAAW,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,0BAA0B,EAAEK,GAAG,CAACE,OAAO,CAAC;MACtDN,QAAQ,CAAC,mDAAmD,CAAC;IAC/D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdgB,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,YAAY,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACF,MAAMtB,KAAK,CAACuB,IAAI,CAAC,oCAAoC,EAAED,OAAO,CAAC;MAC/DP,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEK,GAAG,CAACE,OAAO,CAAC;MACrDI,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEJ,OAAO,KAAK;IAC1C,IAAI;MACF,MAAMtB,KAAK,CAAC2B,GAAG,CAAC,sCAAsCD,EAAE,EAAE,EAAEJ,OAAO,CAAC;MACpEP,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEK,GAAG,CAACE,OAAO,CAAC;MACrDI,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAOF,EAAE,IAAK;IACjC,IAAI;MACF,MAAM1B,KAAK,CAAC6B,MAAM,CAAC,sCAAsCH,EAAE,EAAE,CAAC;MAC9DX,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEK,GAAG,CAACE,OAAO,CAAC;MACrDI,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/E9B,OAAA;MAAI2B,KAAK,EAAE;QAAEI,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAF,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGzE3B,KAAK,iBACJT,OAAA;MAAG2B,KAAK,EAAE;QAAEK,KAAK,EAAE,KAAK;QAAED,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAC7CrB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ,EAGA7B,OAAO,gBACNP,OAAA;MAAG2B,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjDpC,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBAEE9B,OAAA,CAACH,WAAW;QAACwC,QAAQ,EAAEpB;MAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGvCpC,OAAA,CAACF,WAAW;QACVO,QAAQ,EAAEA,QAAS;QACnBiC,QAAQ,EAAEjB,YAAa;QACvBkB,QAAQ,EAAEf;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA,eACF,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChC,EAAA,CArFQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAuFZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}