{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdiwahab\\\\Desktop\\\\Project management\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store the list of projects\n  const [projects, setProjects] = useState([]);\n\n  // Function to fetch all projects from the backend\n  const fetchProjects = async () => {\n    try {\n      // Making a GET request to fetch project data from the API\n      const {\n        data\n      } = await axios.get('http://127.0.0.1:8000/api/projects');\n      setProjects(data); // Updating the `projects` state with fetched data\n    } catch (error) {\n      console.error('Error fetching projects:', error.message); // Logging errors in case of failure\n    }\n  };\n\n  // React's useEffect to fetch projects when the component is mounted\n  useEffect(() => {\n    fetchProjects(); // Fetch projects on initial load\n  }, []);\n\n  // Function to handle the creation of a new project\n  const handleCreate = async project => {\n    try {\n      // Sending a POST request to create a new project\n      await axios.post('http://127.0.0.1:8000/api/projects', project);\n      fetchProjects(); // Refresh the project list after creation\n    } catch (error) {\n      console.error('Error creating project:', error.message); // Log any errors\n    }\n  };\n\n  // Function to handle updating an existing project\n  const handleUpdate = async (id, updatedProject) => {\n    try {\n      // Sending a PUT request to update a specific project by ID\n      await axios.put(`http://127.0.0.1:8000/api/projects/${id}`, updatedProject);\n      fetchProjects(); // Refresh the project list after update\n    } catch (error) {\n      console.error('Error updating project:', error.message); // Log any errors\n    }\n  };\n\n  // Function to handle deleting a project\n  const handleDelete = async id => {\n    try {\n      // Sending a DELETE request to remove a specific project by ID\n      await axios.delete(`http://127.0.0.1:8000/api/projects/${id}`);\n      fetchProjects(); // Refresh the project list after deletion\n    } catch (error) {\n      console.error('Error deleting project:', error.message); // Log any errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        body {\n          font-family: Arial, sans-serif;\n          margin: 0;\n          padding: 0;\n          background-color: #121212; /* Dark theme background */\n          color: #fff; /* Light text for dark theme */\n        }\n\n        .main-container {\n          display: flex;\n          justify-content: space-between;\n          padding: 40px;\n          gap: 30px;\n        }\n\n        .create-form {\n          flex: 1;\n          max-width: 350px;\n          background-color: #1e1e2f; /* Form background */\n          color: #fff;\n          padding: 20px;\n          border-radius: 10px;\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Add subtle shadow */\n        }\n\n        .create-form h3 {\n          color: #fdd835; /* Yellow color for title */\n          text-align: center;\n          margin-bottom: 20px;\n        }\n\n        .create-form input,\n        .create-form textarea,\n        .create-form select {\n          width: 100%;\n          margin-bottom: 15px;\n          padding: 10px;\n          border-radius: 5px;\n          border: 1px solid #ccc;\n          background-color: #2e2e3d; /* Input field background */\n          color: #fff; /* Input text color */\n        }\n\n        .create-form button {\n          width: 100%;\n          background-color: #fdd835; /* Yellow background for buttons */\n          border: none;\n          padding: 10px;\n          color: #121212; /* Dark text on yellow */\n          font-weight: bold;\n          border-radius: 5px;\n          cursor: pointer;\n        }\n\n        .create-form button:hover {\n          background-color: #ffeb3b; /* Lighter yellow on hover */\n        }\n\n        .project-list {\n          flex: 2;\n          display: flex;\n          flex-wrap: wrap;\n          gap: 20px;\n          justify-content: flex-start;\n        }\n\n        .project-card {\n          background-color: #fdd835; /* Yellow background for cards */\n          color: #121212; /* Dark text on yellow */\n          border-radius: 10px;\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow */\n          padding: 20px;\n          width: 300px;\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n        }\n\n        .project-card h3 {\n          color: #121212; /* Dark title color */\n          margin-bottom: 10px;\n        }\n\n        .project-card p {\n          margin: 5px 0;\n          color: #212121; /* Slightly lighter text for details */\n        }\n\n        .project-card .actions {\n          margin-top: 15px;\n          display: flex;\n          justify-content: space-between;\n        }\n\n        .project-card button {\n          border: none;\n          padding: 10px 15px;\n          color: #121212; /* Dark text on yellow */\n          font-weight: bold;\n          border-radius: 5px;\n          cursor: pointer;\n        }\n\n        .project-card button.update {\n          background-color: #fdd835; /* Yellow */\n        }\n\n        .project-card button.update:hover {\n          background-color: #fff; /* Lighter yellow */\n        }\n\n        .project-card button.delete {\n          background-color: #d32f2f; /* Red button for delete */\n        }\n\n        .project-card button.delete:hover {\n          background-color: #f44336; /* Lighter red on hover */\n        }\n\n        @media (max-width: 768px) {\n          .main-container {\n            flex-direction: column; /* Stack items vertically on smaller screens */\n            align-items: center;\n          }\n\n          .project-list {\n            justify-content: center; /* Center cards on smaller screens */\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#fdd835',\n        margin: '20px 0'\n      },\n      children: \"Project Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n          onCreate: handleCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list\",\n        children: /*#__PURE__*/_jsxDEV(ProjectList, {\n          projects: projects,\n          onUpdate: handleUpdate,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectForm","ProjectList","jsxDEV","_jsxDEV","App","_s","projects","setProjects","fetchProjects","data","get","error","console","message","handleCreate","project","post","handleUpdate","id","updatedProject","put","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","color","margin","className","onCreate","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Abdiwahab/Desktop/Project management/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectForm from './components/ProjectForm';\r\nimport ProjectList from './components/ProjectList';\r\n\r\nfunction App() {\r\n  // State to store the list of projects\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  // Function to fetch all projects from the backend\r\n  const fetchProjects = async () => {\r\n    try {\r\n      // Making a GET request to fetch project data from the API\r\n      const { data } = await axios.get('http://127.0.0.1:8000/api/projects');\r\n      setProjects(data); // Updating the `projects` state with fetched data\r\n    } catch (error) {\r\n      console.error('Error fetching projects:', error.message); // Logging errors in case of failure\r\n    }\r\n  };\r\n\r\n  // React's useEffect to fetch projects when the component is mounted\r\n  useEffect(() => {\r\n    fetchProjects(); // Fetch projects on initial load\r\n  }, []);\r\n\r\n  // Function to handle the creation of a new project\r\n  const handleCreate = async (project) => {\r\n    try {\r\n      // Sending a POST request to create a new project\r\n      await axios.post('http://127.0.0.1:8000/api/projects', project);\r\n      fetchProjects(); // Refresh the project list after creation\r\n    } catch (error) {\r\n      console.error('Error creating project:', error.message); // Log any errors\r\n    }\r\n  };\r\n\r\n  // Function to handle updating an existing project\r\n  const handleUpdate = async (id, updatedProject) => {\r\n    try {\r\n      // Sending a PUT request to update a specific project by ID\r\n      await axios.put(`http://127.0.0.1:8000/api/projects/${id}`, updatedProject);\r\n      fetchProjects(); // Refresh the project list after update\r\n    } catch (error) {\r\n      console.error('Error updating project:', error.message); // Log any errors\r\n    }\r\n  };\r\n\r\n  // Function to handle deleting a project\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Sending a DELETE request to remove a specific project by ID\r\n      await axios.delete(`http://127.0.0.1:8000/api/projects/${id}`);\r\n      fetchProjects(); // Refresh the project list after deletion\r\n    } catch (error) {\r\n      console.error('Error deleting project:', error.message); // Log any errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Embedded CSS for styling the app */}\r\n      <style>{`\r\n        body {\r\n          font-family: Arial, sans-serif;\r\n          margin: 0;\r\n          padding: 0;\r\n          background-color: #121212; /* Dark theme background */\r\n          color: #fff; /* Light text for dark theme */\r\n        }\r\n\r\n        .main-container {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          padding: 40px;\r\n          gap: 30px;\r\n        }\r\n\r\n        .create-form {\r\n          flex: 1;\r\n          max-width: 350px;\r\n          background-color: #1e1e2f; /* Form background */\r\n          color: #fff;\r\n          padding: 20px;\r\n          border-radius: 10px;\r\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Add subtle shadow */\r\n        }\r\n\r\n        .create-form h3 {\r\n          color: #fdd835; /* Yellow color for title */\r\n          text-align: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .create-form input,\r\n        .create-form textarea,\r\n        .create-form select {\r\n          width: 100%;\r\n          margin-bottom: 15px;\r\n          padding: 10px;\r\n          border-radius: 5px;\r\n          border: 1px solid #ccc;\r\n          background-color: #2e2e3d; /* Input field background */\r\n          color: #fff; /* Input text color */\r\n        }\r\n\r\n        .create-form button {\r\n          width: 100%;\r\n          background-color: #fdd835; /* Yellow background for buttons */\r\n          border: none;\r\n          padding: 10px;\r\n          color: #121212; /* Dark text on yellow */\r\n          font-weight: bold;\r\n          border-radius: 5px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .create-form button:hover {\r\n          background-color: #ffeb3b; /* Lighter yellow on hover */\r\n        }\r\n\r\n        .project-list {\r\n          flex: 2;\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 20px;\r\n          justify-content: flex-start;\r\n        }\r\n\r\n        .project-card {\r\n          background-color: #fdd835; /* Yellow background for cards */\r\n          color: #121212; /* Dark text on yellow */\r\n          border-radius: 10px;\r\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow */\r\n          padding: 20px;\r\n          width: 300px;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n        }\r\n\r\n        .project-card h3 {\r\n          color: #121212; /* Dark title color */\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .project-card p {\r\n          margin: 5px 0;\r\n          color: #212121; /* Slightly lighter text for details */\r\n        }\r\n\r\n        .project-card .actions {\r\n          margin-top: 15px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n\r\n        .project-card button {\r\n          border: none;\r\n          padding: 10px 15px;\r\n          color: #121212; /* Dark text on yellow */\r\n          font-weight: bold;\r\n          border-radius: 5px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .project-card button.update {\r\n          background-color: #fdd835; /* Yellow */\r\n        }\r\n\r\n        .project-card button.update:hover {\r\n          background-color: #fff; /* Lighter yellow */\r\n        }\r\n\r\n        .project-card button.delete {\r\n          background-color: #d32f2f; /* Red button for delete */\r\n        }\r\n\r\n        .project-card button.delete:hover {\r\n          background-color: #f44336; /* Lighter red on hover */\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .main-container {\r\n            flex-direction: column; /* Stack items vertically on smaller screens */\r\n            align-items: center;\r\n          }\r\n\r\n          .project-list {\r\n            justify-content: center; /* Center cards on smaller screens */\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      {/* Page Header */}\r\n      <h1 style={{ textAlign: 'center', color: '#fdd835', margin: '20px 0' }}>\r\n        Project Management\r\n      </h1>\r\n\r\n      <div className=\"main-container\">\r\n        {/* Create Project Form */}\r\n        <div className=\"create-form\">\r\n          <h3>Create Project</h3>\r\n          <ProjectForm onCreate={handleCreate} />\r\n        </div>\r\n\r\n        {/* Project List */}\r\n        <div className=\"project-list\">\r\n          <ProjectList projects={projects} onUpdate={handleUpdate} onDelete={handleDelete} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oCAAoC,CAAC;MACtEH,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,YAAY,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACF;MACA,MAAMhB,KAAK,CAACiB,IAAI,CAAC,oCAAoC,EAAED,OAAO,CAAC;MAC/DP,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,cAAc,KAAK;IACjD,IAAI;MACF;MACA,MAAMpB,KAAK,CAACqB,GAAG,CAAC,sCAAsCF,EAAE,EAAE,EAAEC,cAAc,CAAC;MAC3EX,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAG,MAAOH,EAAE,IAAK;IACjC,IAAI;MACF;MACA,MAAMnB,KAAK,CAACuB,MAAM,CAAC,sCAAsCJ,EAAE,EAAE,CAAC;MAC9DV,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,oBACEV,OAAA;IAAAoB,QAAA,gBAEEpB,OAAA;MAAAoB,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGVxB,OAAA;MAAIyB,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAR,QAAA,EAAC;IAExE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELxB,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAT,QAAA,gBAE7BpB,OAAA;QAAK6B,SAAS,EAAC,aAAa;QAAAT,QAAA,gBAC1BpB,OAAA;UAAAoB,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBxB,OAAA,CAACH,WAAW;UAACiC,QAAQ,EAAEnB;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAGNxB,OAAA;QAAK6B,SAAS,EAAC,cAAc;QAAAT,QAAA,eAC3BpB,OAAA,CAACF,WAAW;UAACK,QAAQ,EAAEA,QAAS;UAAC4B,QAAQ,EAAEjB,YAAa;UAACkB,QAAQ,EAAEd;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA/MQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAiNZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}